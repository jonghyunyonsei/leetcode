class Solution:
    def longestNiceSubstring(self, s: str) -> str:
        def is_nice(sub):
            char_set = set(sub)
            for char in char_set:
                if char.swapcase() not in char_set:
                    return False
            return True

        def helper(sub):
            if len(sub) < 2:
                return ""
            if is_nice(sub):
                return sub
        
            for i in range(len(sub)):
                if sub[i].swapcase() not in sub:
                    left = helper(sub[:i])
                    right = helper(sub[i+1:])
                    return left if len(left) >= len(right) else right
        
            return ""

        return helper(s)
